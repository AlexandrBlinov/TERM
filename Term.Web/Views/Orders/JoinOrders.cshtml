@model  Term.Web.Models.ExtendedOrdersViewModel
@using Term.Web.Views.Resources;
@using Term.Utils;

@{
    ViewBag.Title = CartAndOrders.ListOfOrders;
    string invisAddStock = "";
    string colorNewOrder = "";
    if (!ViewBag.IsForeign) { invisAddStock = "invisibleAddStock"; }
}

<h2 class="border-form-podbor search-order-title">@ForSearchResult.ChooseOrders</h2>

@using (Html.BeginForm("JoinOrders", "Orders", FormMethod.Get))
{
    <fieldset class="border-form-podbor">
        <div class="row">
            <div class="col-xs-12 col-sm-2">
                @Html.LabelFor(p => p.BeginDate, new { @class = "search-order-label" })
                <div>
                    <div class="input-group date">
                        @Html.TextBoxFor(model => model.BeginDate, new { @class = "form-control" })
                        <span class="input-group-addon date-pick-btn">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-2">
                @Html.LabelFor(p => p.EndDate, new { @class = "search-order-label" })
                <div>
                    <div class="input-group date">
                        @Html.TextBoxFor(model => model.EndDate, new { @class = "form-control" })
                        <span class="input-group-addon date-pick-btn">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="search-order-label">@CartAndOrders.OrderNumber</label>
                <div>
                    @Html.TextBoxFor(p => p.OrderNumber, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-xs-12 col-sm-2">
                <label class="search-order-label">@CartAndOrders.Status</label>
                <div>
                    @Html.DropDownListFor(p => p.StatusId, Model.Statuses, @CartAndOrders.AllOrders, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2 @invisAddStock">
                <label class="search-order-label">@CartAndOrders.Department</label>
                <div>
                    @Html.DropDownListFor(p => p.DepartmentId, new SelectList(Model.Departments, "DepartmentId", "Name"), "Все", new { @class = "form-control" })
                </div>
            </div>
            @if (ViewBag.IsPartner)
            {
                <div class="col-xs-12 col-sm-2">
                    <label class="search-order-label">@CartAndOrders.Point</label>
                    <div>
                        @Html.DropDownListFor(p => p.PointId, Model.PartnerPoints, @CartAndOrders.All, new { @class = "form-control" })
                    </div>
                </div>
            }
            
            <div class="col-xs-12 col-sm-3">
                <label class="search-order-label">@CartAndOrders.ByProduct</label>
                <div>
                    @Html.TextBoxFor(p => p.ProductName, new { @class = "form-control", @placeholder = @ForSearchResult.CodeOrArt })
                </div>
            </div>
            @if (!ViewBag.IsForeign)
            {
                <div class="col-xs-12 col-sm-3">

                   <!-- <label class="search-order-label">Доставка DPD</label>
                    <div class="p-t-5">
                        @Html.CheckBoxFor(m => m.IsDeliveryByTk)
                    </div> -->
                  
                </div>
            }
            <div class="col-xs-12 text-center search-order-btn">
                <button class="form-podbor-btn-submit" type="submit">@CartAndOrders.Filter</button>
            </div>
        </div>
    </fieldset>

    <div class="order-table-header-block m-t-15">

        <span class="order-table-header">@CartAndOrders.ListOfOrders</span>
        @Html.PagedListPager(Model.Orders, page => Url.Action("JoinOrders", new
   {
       page,
       PointId = Model.PointId,
       DepartmentId = Model.DepartmentId,
       BeginDate = Model.BeginDate.ValueForPaginator(),
       EndDate = Model.EndDate.ValueForPaginator(),
       StatusId = Model.StatusId,
       ProductName = Model.ProductName
   }),
    new PagedListRenderOptions { LinkToFirstPageFormat = String.Format("<<"), LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">"), LinkToLastPageFormat = String.Format(">>"), MaximumPageNumbersToDisplay = 9 })
    </div>

    <div>
        
        <div class="psevdo-select psevdo-select-dispos">
            <label for="ItemsPerPage">@ForSearchResult.PerPage:</label>
            @Html.DropDownListFor(p => p.ItemsPerPage,  new SelectList(new int[] { 10, 20, 50, 100, 200 }), new { id = "ItemsPerPage", name = "ItemsPerPage", @class = "form-control" })
        </div>


    </div>
}
<table id="table-orders" class="data-table order-table">
    <thead>
        <tr>
            <th></th>
            <th>
                @CartAndOrders.Point
            </th>
            <th>
                @CartAndOrders.NumberInDatabase
            </th>
            <th class="@invisAddStock">
                @CartAndOrders.Department
            </th>
            <th>
                @CartAndOrders.Status
            </th>
            @if (ViewBag.IsPartner)
            {
                <th>
                    @CartAndOrders.TotalSum
                </th>
            }
            <th>
                @CartAndOrders.TotalClient
            </th>
            <th>
                @CartAndOrders.DateOrder
            </th>
            <th>
                @CartAndOrders.DateShipment
            </th>
            <th>
                @CartAndOrders.DateOfPayment
            </th>
            <th>
                @CartAndOrders.Comment
            </th>
            <th>
                @ForSearchResult.Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model.Orders)
        {
            
            <tr class="open_order_tr @colorNewOrder" data-idlink="@order.NumberIn1S">
                <td>
                 
                  
                      <input type="checkbox" id="@order.GuidIn1S" class="checkbox-form-podbor yst-order">
                        <label class="checkbox-form-podbor-label min-w-20" for="@order.GuidIn1S">&nbsp;</label> 
                 

                </td>
                <td>
                    @*Html.ActionLink(order.Point.InternalName, "Edit", "Partner", new { PointId = order.PointId }, null)*@
                    <a href="javascript:void(0);">@order.Point.InternalName</a>
                    <br />

                    @if (order.IsDeliveryByTk)
                    {
                        <i class="icon-dpd"></i>
                    }
                </td>
                <td>
                    <span class="open_order" data-idlink="@order.NumberIn1S">@Html.DisplayFor(modelItem => order.NumberIn1S)</span>
                </td>
                <td class="@invisAddStock">

                    @Html.DisplayFor(modelItem => order.Department.Name)
                </td>

                <td>
                    @Html.OrderStatusWithColor(order.OrderStatus)

                    @if (order.IsJoined)
                    { <span class="label label-success">Объединенный</span> }
                </td>
                @if (ViewBag.IsPartner)
                {
                    <td class="price-filds">
                        @Html.DisplayFor(modelItem => order.Total)
                    </td>
                }
                <td class="price-filds">
                    @if (ViewBag.IsPartner)
                    {@(order.PointId == ViewBag.CurrentPointId ? order.TotalOfClient : order.TotalOfPoint)
                    }
                    else
                    {
                        @order.TotalOfClient
                    }



                    @*Html.DisplayFor(modelItem => item.TotalOfClient)*@
                </td>
                <td>
                    @order.OrderDate.ToShortDateString()
                </td>
                <td>
                    @{
                        string deliveryDate;
                        if (order.isReserve)
                        {
                            deliveryDate = @CartAndOrders.ReservedTill + " " + order.OrderDate.AddDays(7).ToShortDateString();
                        }
                        else
                        {
                            deliveryDate = order.DeliveryDate.HasValue ? ((DateTime)order.DeliveryDate).ToShortDateString() : String.Empty;
                        }
                    }

                    @(deliveryDate)
                </td>
                <td>
                    @{var dateOfPayment = order.DateOfPayment.HasValue ? ((DateTime)order.DateOfPayment).ToShortDateString() : String.Empty; }
                    @(dateOfPayment)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => order.Comments)


                </td>
                <td>
                    @Html.ActionLink(@CartAndOrders.Details, "Details", new { guid = order.GuidIn1S }, new { @class = "order-table-details" })
                </td>
            </tr>
                        if (ViewBag.IsPartner)
                        {
                            <tr class="invisible" data-idsource="@order.NumberIn1S">
                                <td colspan="10">
                                    <div class="row head_order_details">
                                        <div class="col-xs-1">
                                         
                                        </div>
                                        <div class="col-xs-1">
                                            №
                                        </div>
                                        <div class="col-xs-2">
                                            @ForSearchResult.Article
                                        </div>
                                        <div class="col-xs-1">
                                            @ForSearchResult.StockNumber
                                        </div>
                                        <div class="col-xs-5">
                                            @ForSearchResult.ProductName
                                        </div>

                                        <div class="col-xs-1">
                                            @ForSearchResult.Available
                                        </div>
                                        <div class="col-xs-1">
                                            @ForSearchResult.Price
                                        </div>
                                    </div>
                                    @{ var i = 0; }

                                    @foreach (var detail in order.OrderDetails)
                                    {
                                        i++;
                                        var bg = "";
                                        if (i % 2 != 0)
                                        {
                                            bg = "background_order_details";
                                        }
                                        <div class="row @bg">
                                            <div class="col-xs-1">
                                                @{ string guidAndRow = String.Concat(order.GuidIn1S.ToString() , i.ToString()); }
                                            
                                                <input type="checkbox" id="@guidAndRow" class="checkbox-form-podbor yst-order-item" data-yst-order="@order.GuidIn1S" data-yst-ordernumber="@order.NumberIn1S" 
                                                       data-yst-count="@detail.Count" data-yst-productid="@detail.Product.ProductId" data-yst-productname="@detail.Product.Name"/>
                                                <label class="checkbox-form-podbor-label" for="@guidAndRow">&nbsp;</label>  
                                            </div>
                                            <div class="col-xs-1">@i</div>
                                            <div class="col-xs-2">@detail.Product.Article</div>
                                            <div class="col-xs-1">@detail.Product.ProductId</div>
                                            <div class="col-xs-5 name_order_details">@detail.Product.Name</div>

                                            <div class="col-xs-1">@detail.Count</div>
                                            <div class="col-xs-1">@detail.Price</div>
                                        </div>
                                    }

                                </td>
                            </tr>
                                            }
                                        }
    </tbody>
</table>









<div class="m-t-15">

    @Html.PagedListPager(Model.Orders, page => Url.Action("JoinOrders", new
   {
       page,
       PointId = Model.PointId,
       DepartmentId = Model.DepartmentId,
       BeginDate = Model.BeginDate.ValueForPaginator(),
       EndDate = Model.EndDate.ValueForPaginator(),
       StatusId = Model.StatusId,
       ProductName = Model.ProductName
   }),
        new PagedListRenderOptions { LinkToFirstPageFormat = String.Format("<<"), LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">"), LinkToLastPageFormat = String.Format(">>"), MaximumPageNumbersToDisplay = 9 })
</div>

<div class="slide-panel-container hidden-xs">
    <div class="slide-panel-left">
        <a href="#" class="opener-sign" id="opener" title="Развернуть окно">
            <i class="fa fa-expand" aria-hidden="true"></i>
            <div class="pad-50">
                <span class="vertical text-uppercase bold"> Товары в заказах для объединения <ins class="slide-panel-left-ins" id="slide-total-count"></ins></span>
            </div>
        </a>
    </div>
    <div class="slide-panel-right">
        <h5 class="slide-panel-header text-uppercase text-center bold">
            Товары в заказах
        </h5>
        <div class="slide-panel-contents">
            <table class="table table-stripped" id="slide-panel-table">
                <thead>
                    <tr>
                        <th>№ заказа</th>
                        <th>Код товара</th>
                        <th>Товар</th>
                        <th>Количество</th>
                        <th> </th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <form id="join-orders-form">
            <div id="slide-validation-summary" class="slide-validation-summary alert alert-danger" data-valmsg-summary="true">

            </div>

            <div class="row slide-panel-attributes">
                <div class="col-xs-12 col-sm-4 m-b-20">
                    <div class="form-group">
                        <label class="slide-panel-label" for="ShippingDate">Дата отгрузки</label>

                        <div class="input-group shipping-date">
                            <input class="form-control" data-val="true" required data-val-date="Поле должно содержать дату." id="ShippingDate" name="ShippingDate" type="text" value="">

                            <span class="input-group-addon date-pick-btn">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>

                </div>
                <div class="col-xs-12 col-sm-8 m-b-20">
                    <div class="form-group">
                        <label class="slide-panel-label">Адрес</label>
                        <div>
                            @Html.DropDownListFor(p => p.AddressId, Model.AddressesIds, "выберите адрес доставки", new { @class = "form-control  m-b-10" })

                        </div>
                    </div>
                </div>
                <div class="col-xs-12">

                    <label class="slide-panel-label">Комментарий</label>
                    <div>
                        <textarea class="form-control" id="Comments" name="Comments" placeholder="пожелания к объединенному заказу" type="text" value="" ></textarea>
                    </div>

                </div>
                <div class="col-xs-12 search-order-btn text-center">
                    <button class="form-podbor-btn-submit" type="submit" id="join-orders">Объединить</button>
                </div>
            </div>
            </form>
</div>
</div>


@section Scripts {
    <script>

        var moduleSlidePanelTable = (function () {


            var serialize = function () {
                itemsToSerialize = [];
                $('#slide-panel-table tbody tr').each(function () {

                    itemsToSerialize.push(
                        {
                            orderid: $(this).data('orderid'),
                            ordernumber: $(this).data('ordernumber'),
                            productid: $(this).data('productid'),
                            productname: $(this).find('.yst-join-productname').text(),
                            count: $(this).find('.yst-join-productcount').val()
                        }
                    );

                });
                localStorage.setItem('joinItems', JSON.stringify(itemsToSerialize));
            },

                restoreItemsFromLocalStorage = function () {
                    var items = JSON.parse(localStorage.getItem('joinItems'));

                    if (items && Array.isArray(items)) {
                        for (i = 0; i < items.length; i++) {
                            this.addToList(items[i].orderid, items[i].ordernumber, items[i].productid, items[i].productname, items[i].count);
                        }
                    }

                },

                updateSlideTotalCount = function () {
                    var count = 0;
                    $('#slide-panel-table tbody tr').each(function () {
                        var countToAdd = $(this).find('.yst-join-productcount').val();

                        if (countToAdd) count += parseInt(countToAdd) || 0;
                    });
                    $('#slide-total-count').text(count);

                };


            return {
                'restoreItems': restoreItemsFromLocalStorage,
                removeTr: function (el) {
                    $(el).closest('tr').remove();
                    serialize();
                    updateSlideTotalCount();
                },
                addToList: function (orderId, ordernumber, productId, productName, count) {
                    var tr = '<tr data-ordernumber="' + ordernumber + '" data-orderid="' + orderId + '" data-productid="' + productId + '"><td>' + ordernumber + '</td><td>' + productId + '</td><td class="yst-join-productname">' + productName + '</td><td><input type="number" class="w-50 yst-join-productcount" value="' + count + '"</td>' +

                        '<td><a href="#" onclick="moduleSlidePanelTable.removeTr(this); return false;" class="yst-remove-item"><i class="glyphicon glyphicon-remove"></i></a></td> </tr>';

                    $('#slide-panel-table tbody').append((tr));

                    serialize();
                    updateSlideTotalCount();

                },
                removeFromList: function (orderId, productId) {

                    $('#slide-panel-table tbody tr').each(function () {

                        if ($(this).data('orderid') == orderId && $(this).data('productid') == productId)

                            $(this).remove();
                    });
                    serialize();
                    updateSlideTotalCount();
                }
            }

        }());

        $(function () {

            var maxDaysToAdd = 5;
            var today = new Date();
         
            var maxDate = new Date(today.getTime() + 1000 * 60 * 60 * 24 * maxDaysToAdd);
            $('.shipping-date').datetimepicker({
                format: 'DD.MM.YYYY', locale: YstLocale.GetLocale("Culture"),
                showTodayButton: true,
                defaultDate: today,
                minDate: today,
                maxDate: maxDate,
                //  daysOfWeekDisabled: [6, 7],
                showClear: true
            });

            moduleSlidePanelTable.restoreItems();

            $('[type=checkbox]').change(function () {

                var $this = $(this);
                var ifchecked = this.checked;

                // если это весь заказ то чекаем и добавляем все товары заказа
                if ($this.hasClass('yst-order') && (this.id)) {
                    var id = this.id;

                    $('.checkbox-form-podbor.yst-order-item').each(function () {
                        if ($(this).data("yst-order") == id) {
                            $(this).prop("checked", ifchecked);

                            $this = $(this);
                            if (ifchecked) moduleSlidePanelTable.addToList($this.data('yst-order'), $this.data('yst-ordernumber'), $this.data('yst-productid'), $this.data('yst-productname'), $this.data('yst-count'));
                            else moduleSlidePanelTable.removeFromList($this.data('yst-order'), $this.data('yst-productid'));
                        }
                    })
                } else
                    // если выбирают товар
                    if (ifchecked && $this.hasClass('yst-order-item'))
                        moduleSlidePanelTable.addToList($this.data('yst-order'), $this.data('yst-ordernumber'), $this.data('yst-productid'), $this.data('yst-productname'), $this.data('yst-count'));
                    else moduleSlidePanelTable.removeFromList($this.data('yst-order'), $this.data('yst-productid'));


            });

            $('#opener').on('click', function () {
                var panel = $('.slide-panel-container');
                var panelRight = $('.slide-panel-right');
                var $openerFa = $('#opener .fa');
                var duration = 500;

                if (panelRight.css('display') == 'none') {
                    document.getElementById('opener').title = 'Свернуть окно';

                    panelRight.show(duration);
                    panel.animate({ 'right': '50%' }, duration);
                    panel.css({ 'transform': 'translate(50%)', 'min-width': '550px' });

                }
                else {
                    document.getElementById('opener').title = 'Развернуть окно';
                    panel.css({ 'min-width': '0' });
                    panel.animate({ 'right': '0' }, duration, function () { panel.css({ "transform": "" }); });
                    panelRight.hide(duration);

                }

                $openerFa.toggleClass('fa-expand').toggleClass('fa-compress');
                return false;
            });

            $('#join-orders-form').on('submit', () => {

                var $summary = $('#slide-validation-summary');
                
                var textError = '<strong>Ошибка!</strong>';
               // if (!$(this).valid()) return false;

                $summary.html('').hide();
                var ordersAndProducts = [];
                $('#slide-panel-table tbody tr').each(function () {

                    ordersAndProducts.push({
                        OrderId: $(this).data('orderid'),
                        ProductId: $(this).data('productid'),
                        Count: parseInt($(this).find('.yst-join-productcount').val()) || 0
                    });
                });

                var parameter = {
                    Comments: $("#Comments").val(),
                    AddressId: $("#AddressId").val(),
                    ShippingDay: $("#ShippingDate").val(),
                    OrdersAndProducts: ordersAndProducts

                }

                $.post("@Url.Action("joinorders", "orders")", parameter).done(function (data) {
                    console.log(data);

                    if (!data.Success) $summary.html(textError + ' ' + data.Message).show();
                    else {
                        $summary.html('').hide();
                        console.log('worked!');
                        localStorage.setItem('joinItems', null);
                        $('#slide-panel-table tbody tr').remove();
                    }
                
                });

                return false;
               
            } ); 

        }())
    </script>
}