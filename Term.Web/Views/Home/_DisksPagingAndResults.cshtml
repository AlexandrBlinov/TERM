@using YstTerm.Models
@using PagedList;
@using Term.Web.Views.Resources;
@using Term.DAL;
@using Term.Web.HtmlHelpers;
@using YstProject.Services

@model  SeasonDisksPodborView
  
<div class="row m-t-15">

    <span class="podbor-tyres-title">@Header.Wheels (@Model.SearchResults.TotalItemCount)</span>
    @Html.PagedListPager(Model.SearchResults, page => Url.RouteUrl("DisksByParams", new
{
    page,
    ProducerId = Model.ProducerId,
    Article = Model.Article,
    Name = Model.Name,
    Width = Model.Width,
    Diametr = Model.Diametr,
    Hole = Model.Hole,
    ET = Model.ET,
    PCD = Model.PCD,
    DIA = Model.DIA,
    DiskColor = Model.DiskColor,
    ItemsPerPage = Model.ItemsPerPage,
    DisplayView = Model.DisplayView,
    SortBy = Model.SortBy,
    IsSet4Items = Model.IsSet4Items,
    PriceMin = Model.PriceMin,
    PriceMax = Model.PriceMax,
    Brands = Model.Brands,
    OnlySale = Model.OnlySale,
    FromRests = Model.FromRests,
    FromOnWay = Model.FromOnWay,
    AllOrByCarReplica = Model.AllOrByCarReplica,
    CarName = Model.CarName
}),
                    new PagedListRenderOptions { UlElementClasses = new[] { "pagination","js-linktoloadajax" }, LinkToFirstPageFormat = String.Format("<<"), LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">"), LinkToLastPageFormat = String.Format(">>"), MaximumPageNumbersToDisplay = 5 })


</div>

<div class="row m-t-15">
    <div class="col-md-8 m-b-10 js-linktoloadajax">

        <span class="radio-label-span">@ForSearchResult.SortBy:&nbsp;&nbsp;&nbsp;</span>

        <div class="btn btn-default sort-btn-style" aria-label="Left Align">
            @Html.ActionLink(@ForSearchResult.Name, "DisksByParams", new
            {
                ProducerId = Model.ProducerId,

                Article = Model.Article,
                Name = Model.Name,
                Width = Model.Width,
                Diametr = Model.Diametr,
                Hole = Model.Hole,
                ET = Model.ET,
                PCD = Model.PCD,
                DIA = Model.DIA,
                DiskColor = Model.DiskColor,
                ItemsPerPage = Model.ItemsPerPage,
                DisplayView = Model.DisplayView,
                PriceMin = Model.PriceMin,
                PriceMax = Model.PriceMax,
                Brands = Model.Brands,
                OnlySale = Model.OnlySale,
                IsSet4Items = Model.IsSet4Items,
                FromRests = Model.FromRests,
                FromOnWay = Model.FromOnWay,
                SortBy = Model.SortBy == SortBy.NameAsc ? "NameDesc" : "NameAsc",
                AllOrByCarReplica = Model.AllOrByCarReplica,
                CarName = Model.CarName
            }, new { @class = "sort-btn-a" })
            @{
                if (Model.SortBy == SortBy.NameAsc || Model.SortBy == SortBy.NameDesc)
                {
                    <span class="@(Model.SortBy == SortBy.NameAsc ? "sort-icon-active-asc" : "sort-icon-active-desc")"> </span>
                }
                else
                {
                    <span class="sort-icon-default"> </span>
                }
            }
        </div>
        <div class="btn btn-default sort-btn-style" aria-label="Left Align">
            @Html.ActionLink(@ForSearchResult.DeliveryTime, "DisksByParams", new
            {
                ProducerId = Model.ProducerId,
                Article = Model.Article,
                Name = Model.Name,
                Width = Model.Width,
                Diametr = Model.Diametr,
                Hole = Model.Hole,
                ET = Model.ET,
                PCD = Model.PCD,
                DIA = Model.DIA,
                DiskColor = Model.DiskColor,
                ItemsPerPage = Model.ItemsPerPage,
                DisplayView = Model.DisplayView,
                PriceMin = Model.PriceMin,
                PriceMax = Model.PriceMax,
                Brands = Model.Brands,
                OnlySale = Model.OnlySale,
                IsSet4Items = Model.IsSet4Items,
                FromRests = Model.FromRests,
                FromOnWay = Model.FromOnWay,
                SortBy = Model.SortBy == SortBy.DeliveryAsc ? "DeliveryDesc" : "DeliveryAsc",
                AllOrByCarReplica = Model.AllOrByCarReplica,
                CarName = Model.CarName
            }, new { @class = "sort-btn-a" })
            @{
                if (Model.SortBy == SortBy.DeliveryAsc || Model.SortBy == SortBy.DeliveryDesc)
                {
                    <span class="@(Model.SortBy == SortBy.DeliveryAsc ? "sort-icon-active-asc" : "sort-icon-active-desc")"> </span>
                }
                else
                {
                    <span class="sort-icon-default"> </span>
                }
            }
        </div>
        <div class="btn btn-default sort-btn-style" aria-label="Left Align">
            @Html.ActionLink(@ForSearchResult.Amount, "DisksByParams", new
            {
                ProducerId = Model.ProducerId,
                Article = Model.Article,
                Name = Model.Name,
                Width = Model.Width,
                Diametr = Model.Diametr,
                Hole = Model.Hole,
                ET = Model.ET,
                PCD = Model.PCD,
                DIA = Model.DIA,
                DiskColor = Model.DiskColor,
                ItemsPerPage = Model.ItemsPerPage,
                DisplayView = Model.DisplayView,
                PriceMin = Model.PriceMin,
                PriceMax = Model.PriceMax,
                Brands = Model.Brands,
                OnlySale = Model.OnlySale,
                IsSet4Items = Model.IsSet4Items,
                FromRests = Model.FromRests,
                FromOnWay = Model.FromOnWay,
                SortBy = Model.SortBy == SortBy.AmountAsc ? "AmountDesc" : "AmountAsc",
                AllOrByCarReplica = Model.AllOrByCarReplica,
                CarName = Model.CarName
            }, new { @class = "sort-btn-a" })
            @{
                if (Model.SortBy == SortBy.AmountAsc || Model.SortBy == SortBy.AmountDesc)
                {
                    <span class="@(Model.SortBy == SortBy.AmountAsc ? "sort-icon-active-asc" : "sort-icon-active-desc")"> </span>
                }
                else
                {
                    <span class="sort-icon-default"> </span>
                }
            }
        </div>
        <div class="btn btn-default sort-btn-style" aria-label="Left Align">
            @Html.ActionLink(@ForSearchResult.Price, "DisksByParams", new
            {
                ProducerId = Model.ProducerId,
                Article = Model.Article,
                Name = Model.Name,
                Width = Model.Width,
                Diametr = Model.Diametr,
                Hole = Model.Hole,
                ET = Model.ET,
                PCD = Model.PCD,
                DIA = Model.DIA,
                DiskColor = Model.DiskColor,
                ItemsPerPage = Model.ItemsPerPage,
                DisplayView = Model.DisplayView,
                PriceMin = Model.PriceMin,
                PriceMax = Model.PriceMax,
                Brands = Model.Brands,
                OnlySale = Model.OnlySale,
                IsSet4Items = Model.IsSet4Items,
                FromRests = Model.FromRests,
                FromOnWay = Model.FromOnWay,
                SortBy = Model.SortBy == SortBy.PriceAsc ? "PriceDesc" : "PriceAsc",
                AllOrByCarReplica = Model.AllOrByCarReplica,
                CarName = Model.CarName
            }, new { @class = "sort-btn-a" })
            @{
                if (Model.SortBy == SortBy.PriceAsc || Model.SortBy == SortBy.PriceDesc)
                {
                    <span class="@(Model.SortBy == SortBy.PriceAsc ? "sort-icon-active-asc" : "sort-icon-active-desc")"> </span>
                }
                else
                {
                    <span class="sort-icon-default"> </span>
                }
            }
        </div>
        @if (ViewBag.SaleMode)
        {
            <div class="btn btn-default sort-btn-style" aria-label="Left Align">
                @Html.ActionLink(@ForSearchResult.Sale, "DisksByParams", new
                {
                    ProducerId = Model.ProducerId,
                    Article = Model.Article,
                    Name = Model.Name,
                    Width = Model.Width,
                    Diametr = Model.Diametr,
                    Hole = Model.Hole,
                    ET = Model.ET,
                    PCD = Model.PCD,
                    DIA = Model.DIA,
                    DiskColor = Model.DiskColor,
                    DisplayView = Model.DisplayView,
                    ItemsPerPage = Model.ItemsPerPage,
                    SortBy = Model.SortBy,
                    IsSet4Items = Model.IsSet4Items,
                    PriceMin = Model.PriceMin,
                    PriceMax = Model.PriceMax,
                    Brands = Model.Brands,
                    FromRests = Model.FromRests,
                    FromOnWay = Model.FromOnWay,
                    OnlySale = Model.OnlySale == true ? false : true,
                    AllOrByCarReplica = Model.AllOrByCarReplica,
                    CarName = Model.CarName
                }, new { @class = "sort-btn-a", title = @ForSearchResult.Sort })
            </div>
        }
    </div>
    <div class="col-md-4 m-b-10">
        <div class="row">
            <div class="col-xs-8">
                <div class="psevdo-select">
                    <label for="ItemsPerPageForm">@ForSearchResult.PerPage:</label>
                    @Html.DropDownListFor(p => p.ItemsPerPage, HtmlElements.ListItemsPerPage(200, 50), null, new { @id = "ItemsPerPageForm", @class = "form-control" })
                </div>

            </div>
            <div class="col-xs-4">
                <div class="btn-group form-podbor-change-view" role="group">
                    <div id="table" class="js-linktoloadajax btn btn-default @(Model.DisplayView == Display.Table ? "active" : "")">
                        @Html.ActionLink(" ", "DisksByParams", new
                        {
                            ProducerId = Model.ProducerId,
                            Article = Model.Article,
                            Name = Model.Name,
                            Width = Model.Width,
                            Diametr = Model.Diametr,
                            Hole = Model.Hole,
                            ET = Model.ET,
                            PCD = Model.PCD,
                            DIA = Model.DIA,
                            DiskColor = Model.DiskColor,
                            ItemsPerPage = Model.ItemsPerPage,
                            PriceMin = Model.PriceMin,
                            PriceMax = Model.PriceMax,
                            Brands = Model.Brands,
                            OnlySale = Model.OnlySale,
                            IsSet4Items = Model.IsSet4Items,
                            FromRests = Model.FromRests,
                            FromOnWay = Model.FromOnWay,
                            DisplayView = "Table",
                            AllOrByCarReplica = Model.AllOrByCarReplica,
                            CarName = Model.CarName
                        }, new { @class = "glyphicon glyphicon-th-list change-view-custom", title = @ForSearchResult.List })
                    </div>

                    <div id="plitka" class="js-linktoloadajax btn btn-default @(Model.DisplayView == Display.Plitka ? "active" : "")">
                        @Html.ActionLink(" ", "DisksByParams", new
                        {
                            ProducerId = Model.ProducerId,
                            Article = Model.Article,
                            Name = Model.Name,
                            Width = Model.Width,
                            Diametr = Model.Diametr,
                            Hole = Model.Hole,
                            ET = Model.ET,
                            PCD = Model.PCD,
                            DIA = Model.DIA,
                            DiskColor = Model.DiskColor,
                            ItemsPerPage = Model.ItemsPerPage,
                            PriceMin = Model.PriceMin,
                            PriceMax = Model.PriceMax,
                            OnlySale = Model.OnlySale,
                            IsSet4Items = Model.IsSet4Items,
                            FromRests = Model.FromRests,
                            FromOnWay = Model.FromOnWay,
                            Brands = Model.Brands,
                            DisplayView = "Plitka",
                            AllOrByCarReplica = Model.AllOrByCarReplica,
                            CarName = Model.CarName
                        }, new { @class = "glyphicon glyphicon-th change-view-custom", title = @ForSearchResult.Tile })
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>




@{Html.RenderPartial("_Disks", Model);}



<div class="row m-t-15">

    @Html.PagedListPager(Model.SearchResults, page => Url.RouteUrl("DisksByParams", new
{
    page,
    ProducerId = Model.ProducerId,
    Article = Model.Article,
    Name = Model.Name,
    Width = Model.Width,
    Diametr = Model.Diametr,
    Hole = Model.Hole,
    ET = Model.ET,
    PCD = Model.PCD,
    DIA = Model.DIA,
    DiskColor = Model.DiskColor,
    ItemsPerPage = Model.ItemsPerPage,
    DisplayView = Model.DisplayView,
    SortBy = Model.SortBy,
    PriceMin = Model.PriceMin,
    PriceMax = Model.PriceMax,
    Brands = Model.Brands,
    OnlySale = Model.OnlySale,
    IsSet4Items = Model.IsSet4Items,
    FromRests = Model.FromRests,
    FromOnWay = Model.FromOnWay,
    AllOrByCarReplica = Model.AllOrByCarReplica,
    CarName = Model.CarName
}),
                    new PagedListRenderOptions { UlElementClasses = new[] { "pagination", "js-linktoloadajax" }, LinkToFirstPageFormat = String.Format("<<"), LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">"), LinkToLastPageFormat = String.Format(">>"), MaximumPageNumbersToDisplay = 5 })
</div>
