@using Term.Web.HtmlHelpers
@using YstTerm.Models
@using YstProject.Services
@model  CargoTyresPodborView
@using Term.Web.Views.Resources;


@{
    ViewBag.Title = @ForSearchResult.SearchByTyreSize;
}

@*@Html.Partial("_BreadCrumbs", new BreadcrumbModel { CurrentActionName = @Header.Tyres })*@


@using (Html.BeginForm("CargoTyres", "Home", FormMethod.Get, new { @id = "cargotyres-podbor", @data_name = "tyre" }))
{
    @Html.Hidden("SortBy", Model.SortBy)
    @Html.Hidden("DisplayView", Model.DisplayView)
    @Html.Hidden("ItemsPerPage", Model.ItemsPerPage)
    
    @Html.Hidden("PriceMin", Model.PriceMin)
    @Html.Hidden("PriceMax", Model.PriceMax)
    <div class="row border-form-podbor">
        <img class="podbor-tyres-title-img" alt="@ForSearchResult.ChooseCargoTyres" src="~/Content/img/img-tyres-podbor.png" /> <span class="podbor-tyres-title">@ForSearchResult.ChooseCargoTyres</span>
        <a class="a-clear-param" name="clear" href="#">@ForSearchResult.ClearAll <img alt="@ForSearchResult.ClearAll" src="~/Content/img/clear-param.png" /></a>
    </div>
    <div class="row m-t-15">
       
       @{Html.RenderPartial("_SearchFieldbyCodeArticleOrName", Model);}
    </div>
  
    <div class="row m-t-15">
        
        <div class="col-xs-12 col-sm-9">
            
            <div class="row">
                <div class="col-xs-12 m-b-20">
                    <span class="podbor-tyres-param">@ForSearchResult.Param</span>
                </div>
                
                <div class="col-xs-12 col-sm-4 m-b-10">

                    @Html.DropDownListFor(p => p.Diametr, new SelectList(Model.CargoDiametr), @ForSearchResult.Diameter, new { @class = "form-control" })
                </div>
                <div class="col-xs-12 col-sm-4 m-b-10">

                    @Html.DropDownListFor(p => p.Width, new SelectList(Model.CargoWidth), @ForSearchResult.Width, new { @class = "form-control" })
                </div>
                <div class="col-xs-12 col-sm-4 m-b-10">

                    @Html.DropDownListFor(p => p.Height, new SelectList(Model.CargoHeight), @ForSearchResult.Height, new { @class = "form-control" })
                </div>
                <div class="col-xs-12 col-sm-4 m-b-10">
                    @Html.DropDownListFor(p => p.ProducerId, new SelectList(Model.Producers, "ProducerID", "Name"), @ForSearchResult.ChooseSupplier, new { @class = "form-control" })

                </div>
            </div>
        </div>
        <div class="hidden-xs col-sm-3">
            <div class="col-xs-12 m-b-20">
                <span class="podbor-tyres-param">@ForSearchResult.Price</span>
            </div>

            <div class="form-inline">
                <div class="form-group">
                    @ForSearchResult.From <input type="text" class="form-control input-price-range" id="price-slider-min" /> &mdash;
                </div>
                <div class="form-group">
                    @ForSearchResult.To <input type="text" class="form-control input-price-range" id="price-slider-max" />
                </div>
            </div>
            <div class="m-t-15">
                <div id="slider-range"></div>
                <p>
                    <span class="slider-price-const-min">0</span>
                    <span id="MaxPrice" class="slider-price-const-max">@ViewBag.MaxPrice</span>
                    <span id="PriceStepSlide" class="invisible">@ViewBag.PriceStepSlide</span>
                </p>
            </div>
        </div>
    </div>
    <div class="row text-center border-form-podbor">
        <button type="submit" class="form-podbor-btn-submit">@ForSearchResult.ChooseCargoTyres</button>
    </div>
}

<div class="row m-t-15">

    <span class="podbor-tyres-title">@Header.Tyres (@Model.SearchResults.TotalItemCount)</span>
    @Html.PagedListPager(Model.SearchResults, page => Url.RouteUrl("CargoTyres", new
        {
            page,
            ProducerId = Model.ProducerId,
            Article = Model.Article,
            Name = Model.Name,
            Width = Model.Width,
            Height = Model.Height,
            Diametr = Model.Diametr,
            ItemsPerPage = Model.ItemsPerPage,
            SortBy = Model.SortBy,
            PriceMin = Model.PriceMin,
            PriceMax = Model.PriceMax,
            DisplayView = Model.DisplayView
        }),
        new PagedListRenderOptions { LinkToFirstPageFormat = String.Format("<<"), LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">"), LinkToLastPageFormat = String.Format(">>"), MaximumPageNumbersToDisplay = 9 })


</div>

<div class="row m-t-15">
    <div class="col-xs-8">

        <span class="radio-label-span">@ForSearchResult.SortBy:&nbsp;&nbsp;&nbsp;</span>

        <div class="btn btn-default sort-btn-style" aria-label="Left Align">
            @Html.ActionLink(@ForSearchResult.Name, "CargoTyres", new
                                {
                                    ProducerId = Model.ProducerId,
                                    Article = Model.Article,
                                    Name = Model.Name,
                                    Width = Model.Width,
                                    Height = Model.Height,
                                    Diametr = Model.Diametr,
                                    DisplayView = Model.DisplayView,
                                    ItemsPerPage = Model.ItemsPerPage,
                                    PriceMin = Model.PriceMin,
                                    PriceMax = Model.PriceMax,
                                    SortBy = Model.SortBy == SortBy.NameAsc ? "NameDesc" : "NameAsc"
                                }, new { @class = "sort-btn-a" })
            @{
                if (Model.SortBy == SortBy.NameAsc || Model.SortBy == SortBy.NameDesc)
                {
                    <span class="@(Model.SortBy == SortBy.NameAsc ? "sort-icon-active-asc" : "sort-icon-active-desc")"> </span>
                }
                else
                {
                    <span class="sort-icon-default"> </span>
                }
            }
        </div>
        <div class="btn btn-default sort-btn-style" aria-label="Left Align">
            @Html.ActionLink(@ForSearchResult.DeliveryTime, "CargoTyres", new
                                {
                                    ProducerId = Model.ProducerId,
                                    Article = Model.Article,
                                    Name = Model.Name,
                                    Width = Model.Width,
                                    Height = Model.Height,
                                    Diametr = Model.Diametr,
                                    DisplayView = Model.DisplayView,
                                    ItemsPerPage = Model.ItemsPerPage,
                                    PriceMin = Model.PriceMin,
                                    PriceMax = Model.PriceMax,
                                    SortBy = Model.SortBy == SortBy.DeliveryAsc ? "DeliveryDesc" : "DeliveryAsc"
                                }, new { @class = "sort-btn-a" })
            @{
                if (Model.SortBy == SortBy.DeliveryAsc || Model.SortBy == SortBy.DeliveryDesc)
                {
                    <span class="@(Model.SortBy == SortBy.DeliveryAsc ? "sort-icon-active-asc" : "sort-icon-active-desc")"> </span>
                }
                else
                {
                    <span class="sort-icon-default"> </span>
                }
            }
        </div>
        <div class="btn btn-default sort-btn-style" aria-label="Left Align">
            @Html.ActionLink(@ForSearchResult.Amount, "CargoTyres", new
                                {
                                    ProducerId = Model.ProducerId,
                                    Article = Model.Article,
                                    Name = Model.Name,
                                    Width = Model.Width,
                                    Height = Model.Height,
                                    Diametr = Model.Diametr,
                                    DisplayView = Model.DisplayView,
                                    ItemsPerPage = Model.ItemsPerPage,
                                    PriceMin = Model.PriceMin,
                                    PriceMax = Model.PriceMax,
                                    SortBy = Model.SortBy == SortBy.AmountAsc ? "AmountDesc" : "AmountAsc"
                                }, new { @class = "sort-btn-a" })
            @{
                if (Model.SortBy == SortBy.AmountAsc || Model.SortBy == SortBy.AmountDesc)
                {
                    <span class="@(Model.SortBy == SortBy.AmountAsc ? "sort-icon-active-asc" : "sort-icon-active-desc")"> </span>
                }
                else
                {
                    <span class="sort-icon-default"> </span>
                }
            }
        </div>
        <div class="btn btn-default sort-btn-style" aria-label="Left Align">
            @Html.ActionLink(@ForSearchResult.Price, "CargoTyres", new
                                {
                                    ProducerId = Model.ProducerId,
                                    Article = Model.Article,
                                    Name = Model.Name,
                                    Width = Model.Width,
                                    Height = Model.Height,
                                    Diametr = Model.Diametr,
                                    DisplayView = Model.DisplayView,
                                    ItemsPerPage = Model.ItemsPerPage,
                                    PriceMin = Model.PriceMin,
                                    PriceMax = Model.PriceMax,
                                    SortBy = Model.SortBy == SortBy.PriceAsc ? "PriceDesc" : "PriceAsc"
                                }, new { @class = "sort-btn-a" })
            @{
                if (Model.SortBy == SortBy.PriceAsc || Model.SortBy == SortBy.PriceDesc)
                {
                    <span class="@(Model.SortBy == SortBy.PriceAsc ? "sort-icon-active-asc" : "sort-icon-active-desc")"> </span>
                }
                else
                {
                    <span class="sort-icon-default"> </span>
                }
            }
        </div>

    </div>
    <div class="col-xs-4">
        <div class="row">
            <div class="col-xs-8">
                <div class="psevdo-select">
                    <label for="ItemsPerPageForm">@ForSearchResult.PerPage:</label>
                    @Html.DropDownListFor(p => p.ItemsPerPage, HtmlElements.ListItemsPerPage(200, 50), null, new { @id = "ItemsPerPageForm", @class = "form-control" })
                </div>

            </div>
            <div class="col-xs-4">
                <div class="btn-group form-podbor-change-view" role="group">
                    <div id="table" class="btn btn-default @(Model.DisplayView == Display.Table ? "active" : "")">
                        @Html.ActionLink(" ", "CargoTyres", new
                        {

                            ProducerId = Model.ProducerId,
                            Article = Model.Article,
                            Name = Model.Name,
                            Width = Model.Width,
                            Height = Model.Height,
                            Diametr = Model.Diametr,
                            ItemsPerPage = Model.ItemsPerPage,
                            SortBy = Model.SortBy,
                            DisplayView = "Table",
                            PriceMin = Model.PriceMin,
                            PriceMax = Model.PriceMax
                        }, new { @class = "glyphicon glyphicon-th-list change-view-custom", title = @ForSearchResult.List })
                    </div>

                    <div id="plitka" class="btn btn-default @(Model.DisplayView == Display.Plitka ? "active" : "")">
                        @Html.ActionLink(" ", "CargoTyres", new
                        {

                            ProducerId = Model.ProducerId,
                            Article = Model.Article,
                            Name = Model.Name,
                            Width = Model.Width,
                            Height = Model.Height,
                            Diametr = Model.Diametr,
                            ItemsPerPage = Model.ItemsPerPage,
                            SortBy = Model.SortBy,
                            DisplayView = "Plitka",
                            PriceMin = Model.PriceMin,
                            PriceMax = Model.PriceMax
                        }, new { @class = "glyphicon glyphicon-th change-view-custom", title = @ForSearchResult.Tile })
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>





@{Html.RenderPartial("_CargoTyres", Model);}



<div class="row m-t-15">

    @Html.PagedListPager(Model.SearchResults, page => Url.RouteUrl("CargoTyres", new
        {
            page,
            ProducerId = Model.ProducerId,
            Article = Model.Article,
            Name = Model.Name,
            Width = Model.Width,
            Height = Model.Height,
            Diametr = Model.Diametr,
            ItemsPerPage = Model.ItemsPerPage,
            SortBy = Model.SortBy,
            PriceMin = Model.PriceMin,
            PriceMax = Model.PriceMax,
            DisplayView = Model.DisplayView
        }),
        new PagedListRenderOptions { LinkToFirstPageFormat = String.Format("<<"), LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">"), LinkToLastPageFormat = String.Format(">>"), MaximumPageNumbersToDisplay = 9 })
</div>

