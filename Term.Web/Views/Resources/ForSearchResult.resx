<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Action" xml:space="preserve">
    <value>Action</value>
  </data>
  <data name="Added" xml:space="preserve">
    <value>Added</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Allseason" xml:space="preserve">
    <value>Allseason</value>
  </data>
  <data name="AllShip" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Brand" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="ByBrand" xml:space="preserve">
    <value>By brand</value>
  </data>
  <data name="ByPrice" xml:space="preserve">
    <value>By price</value>
  </data>
  <data name="Capacity" xml:space="preserve">
    <value>Capacity</value>
  </data>
  <data name="ChooseSupplier" xml:space="preserve">
    <value>To choose brand</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="CodeOrArt" xml:space="preserve">
    <value>Search by Code/article</value>
  </data>
  <data name="CrankCurrent" xml:space="preserve">
    <value>Crank current</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>days</value>
  </data>
  <data name="DeliveryTime" xml:space="preserve">
    <value>Delivery time</value>
  </data>
  <data name="Diameter" xml:space="preserve">
    <value>Diameter</value>
  </data>
  <data name="Dimensions" xml:space="preserve">
    <value>Dimensions</value>
  </data>
  <data name="EntryPrice" xml:space="preserve">
    <value>Entry price</value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="Holes" xml:space="preserve">
    <value>Holes</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items:</value>
  </data>
  <data name="List" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="ManufacturerCode" xml:space="preserve">
    <value>Manufacturer's code</value>
  </data>
  <data name="Model" xml:space="preserve">
    <value>Model</value>
  </data>
  <data name="MoneyEn" xml:space="preserve">
    <value>$</value>
  </data>
  <data name="MoneyRu" xml:space="preserve">
    <value />
  </data>
  <data name="MsgAddToCart1" xml:space="preserve">
    <value>Item:</value>
  </data>
  <data name="MsgAddToCart2" xml:space="preserve">
    <value>added to cart.</value>
  </data>
  <data name="MsgAddToCart3" xml:space="preserve">
    <value>Amount:</value>
  </data>
  <data name="MsgDelFromCart1" xml:space="preserve">
    <value>was removed.</value>
  </data>
  <data name="MsgDelFromCart2" xml:space="preserve">
    <value>Item not found.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoShip" xml:space="preserve">
    <value>No studs</value>
  </data>
  <data name="PassengerTyres" xml:space="preserve">
    <value>Passenger car tyres</value>
  </data>
  <data name="PerPage" xml:space="preserve">
    <value>On page</value>
  </data>
  <data name="Photo" xml:space="preserve">
    <value>Photo</value>
  </data>
  <data name="Polarity" xml:space="preserve">
    <value>Polarity</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ProducerName" xml:space="preserve">
    <value>Supplier</value>
  </data>
  <data name="ProductName" xml:space="preserve">
    <value>Product name</value>
  </data>
  <data name="RetailPrice" xml:space="preserve">
    <value>Retail price</value>
  </data>
  <data name="Sale" xml:space="preserve">
    <value>Sale</value>
  </data>
  <data name="SearchByCarBatarisSize" xml:space="preserve">
    <value>Search by car batteries parameters</value>
  </data>
  <data name="SearchByTyreSize" xml:space="preserve">
    <value>Search by tyre size</value>
  </data>
  <data name="SearchByWheelSize" xml:space="preserve">
    <value>Search by wheel parameters</value>
  </data>
  <data name="Season" xml:space="preserve">
    <value>Season</value>
  </data>
  <data name="Ship" xml:space="preserve">
    <value>Studs</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="StockNumber" xml:space="preserve">
    <value>Stock number</value>
  </data>
  <data name="Summer" xml:space="preserve">
    <value>Summer</value>
  </data>
  <data name="Tile" xml:space="preserve">
    <value>Tile</value>
  </data>
  <data name="ToCart" xml:space="preserve">
    <value>Add to cart</value>
  </data>
  <data name="ToSearch" xml:space="preserve">
    <value>To search</value>
  </data>
  <data name="TruckTyres" xml:space="preserve">
    <value>Truck tyres</value>
  </data>
  <data name="VehicleFitmentGuide" xml:space="preserve">
    <value>Vehicle fitment guide</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="WheelColor" xml:space="preserve">
    <value>Wheel color</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="Winter" xml:space="preserve">
    <value>Winter</value>
  </data>
  <data name="ManufacturerCountry" xml:space="preserve">
    <value>Manufacturer сountry</value>
  </data>
  <data name="Factory" xml:space="preserve">
    <value>Factory</value>
  </data>
  <data name="WithTolerances" xml:space="preserve">
    <value>With tolerances</value>
  </data>
  <data name="AlloyAndSteel" xml:space="preserve">
    <value>Alloy and steel wheels</value>
  </data>
  <data name="ByCar" xml:space="preserve">
    <value>by car</value>
  </data>
  <data name="ByParam" xml:space="preserve">
    <value>by parameters</value>
  </data>
  <data name="CarParam" xml:space="preserve">
    <value>Car parameters</value>
  </data>
  <data name="ChooseAkbByCar" xml:space="preserve">
    <value>Select batteries by car</value>
  </data>
  <data name="ChooseBattery" xml:space="preserve">
    <value>Choose battery</value>
  </data>
  <data name="ChooseCargoTyres" xml:space="preserve">
    <value>Choose truck tyres</value>
  </data>
  <data name="ChooseDisks" xml:space="preserve">
    <value>Choose wheels</value>
  </data>
  <data name="ChooseOrders" xml:space="preserve">
    <value>Choose orders</value>
  </data>
  <data name="ChooseSales" xml:space="preserve">
    <value>Choose sales</value>
  </data>
  <data name="ChooseTyres" xml:space="preserve">
    <value>Choose tyres </value>
  </data>
  <data name="ClearAll" xml:space="preserve">
    <value>clear all</value>
  </data>
  <data name="From" xml:space="preserve">
    <value />
  </data>
  <data name="Param" xml:space="preserve">
    <value>Parameters</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchResult" xml:space="preserve">
    <value>Search result</value>
  </data>
  <data name="SortBy" xml:space="preserve">
    <value>Sort by</value>
  </data>
  <data name="To" xml:space="preserve">
    <value />
  </data>
  <data name="RetailPrice2" xml:space="preserve">
    <value>Retail price</value>
  </data>
  <data name="FromOnWay" xml:space="preserve">
    <value>From on way</value>
  </data>
  <data name="FromStock" xml:space="preserve">
    <value>From stock</value>
  </data>
  <data name="ParentName" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Article" xml:space="preserve">
    <value>Article</value>
  </data>
  <data name="CategoryName" xml:space="preserve">
    <value>Category name</value>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
  </data>
  <data name="LoadIndex" xml:space="preserve">
    <value>Load Index</value>
  </data>
  <data name="PriceRecRozn" xml:space="preserve">
    <value>PriceRecRozn</value>
  </data>
  <data name="RestEkb" xml:space="preserve">
    <value>Rest Ekb</value>
  </data>
  <data name="RestRnd" xml:space="preserve">
    <value>Rest Rostov</value>
  </data>
  <data name="RestSpb" xml:space="preserve">
    <value>Rest Spb</value>
  </data>
  <data name="RestYar" xml:space="preserve">
    <value>Rest Yaroslavl</value>
  </data>
  <data name="SpeedIndex" xml:space="preserve">
    <value>Speed Index</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="RestMsk" xml:space="preserve">
    <value>Rest Msk</value>
  </data>
  <data name="VehicleCar" xml:space="preserve">
    <value>CAR</value>
  </data>
  <data name="VehicleModel" xml:space="preserve">
    <value>MODEL AND MODIFICATIONS</value>
  </data>
  <data name="Barcode" xml:space="preserve">
    <value>Barcode</value>
  </data>
  <data name="Analogs" xml:space="preserve">
    <value>Analogs</value>
  </data>
  <data name="Perfect_for" xml:space="preserve">
    <value>Perfect for</value>
  </data>
  <data name="Permitted_tire_sizes" xml:space="preserve">
    <value>Permitted tire sizes</value>
  </data>
  <data name="IsSet4Items" xml:space="preserve">
    <value>Set (more than 4 items)</value>
  </data>
  <data name="AllReplica" xml:space="preserve">
    <value>All Replica</value>
  </data>
  <data name="ReplicaByAuto" xml:space="preserve">
    <value>Replica by car</value>
  </data>
  <data name="SizeOther_1" xml:space="preserve">
    <value>Size 1</value>
  </data>
  <data name="SizeOther_2" xml:space="preserve">
    <value>Size 2</value>
  </data>
  <data name="DaysOtherStock" xml:space="preserve">
    <value>Days other stock</value>
  </data>
  <data name="RestOtherStock" xml:space="preserve">
    <value>Rest other stock</value>
  </data>
  <data name="ETto" xml:space="preserve">
    <value>ET to</value>
  </data>
  <data name="Rear" xml:space="preserve">
    <value>(Rear)</value>
  </data>
  <data name="Friction" xml:space="preserve">
    <value>friction</value>
  </data>
  <data name="ShipNoShip" xml:space="preserve">
    <value>no studs</value>
  </data>
  <data name="ChooseSeasonOrders" xml:space="preserve">
    <value>Choose orders</value>
  </data>
  <data name="PriceRecIm" xml:space="preserve">
    <value>PriceRecIm</value>
  </data>
</root>