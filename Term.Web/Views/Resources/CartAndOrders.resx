<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Adjournment" xml:space="preserve">
    <value>Adjournment</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="AllOrders" xml:space="preserve">
    <value>All orders</value>
  </data>
  <data name="AmountShipped" xml:space="preserve">
    <value>Amount (shipped)</value>
  </data>
  <data name="Analogs" xml:space="preserve">
    <value>Analogs</value>
  </data>
  <data name="ApplyChanges" xml:space="preserve">
    <value>Apply changes</value>
  </data>
  <data name="Available" xml:space="preserve">
    <value>available</value>
  </data>
  <data name="BackToList" xml:space="preserve">
    <value>&lt;&lt; To the list of orders</value>
  </data>
  <data name="ByProduct" xml:space="preserve">
    <value>Search by product</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CarBrand" xml:space="preserve">
    <value>Car brand</value>
  </data>
  <data name="CarNumber" xml:space="preserve">
    <value>Car number</value>
  </data>
  <data name="Cart_Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Cart_Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="Cart_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Cart_Picture" xml:space="preserve">
    <value>Picture</value>
  </data>
  <data name="Cart_Price" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Cart_Totals" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Cart_Volume" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="Cart_Weight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="ChangeOrder" xml:space="preserve">
    <value>Change order</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="CombinedOrder" xml:space="preserve">
    <value>Combined</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Comments" xml:space="preserve">
    <value>Comments to the order</value>
  </data>
  <data name="CompleteOrder" xml:space="preserve">
    <value>To complete the order</value>
  </data>
  <data name="Contents" xml:space="preserve">
    <value>Products to order</value>
  </data>
  <data name="CorrectShipmentDate" xml:space="preserve">
    <value>Set the correct shipment date</value>
  </data>
  <data name="CreateOrder" xml:space="preserve">
    <value>To the order</value>
  </data>
  <data name="CubicMeters" xml:space="preserve">
    <value>c. m.</value>
  </data>
  <data name="CustomerData" xml:space="preserve">
    <value>Customer data</value>
  </data>
  <data name="DateOfPayment" xml:space="preserve">
    <value>Date of payment</value>
  </data>
  <data name="DateOrder" xml:space="preserve">
    <value>Date of the order</value>
  </data>
  <data name="DateSale" xml:space="preserve">
    <value>Date of the sale</value>
  </data>
  <data name="DateShipment" xml:space="preserve">
    <value>Date of shipment</value>
  </data>
  <data name="DateShipmentRange" xml:space="preserve">
    <value>Date of shipment should  be in range from</value>
  </data>
  <data name="DeliveryByTransportCompany" xml:space="preserve">
    <value>Delivery by transport company</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Driver" xml:space="preserve">
    <value>Driver</value>
  </data>
  <data name="EditOrder" xml:space="preserve">
    <value>Edit the order</value>
  </data>
  <data name="ErrorAmountOnStock" xml:space="preserve">
    <value>Requested amount exceeds the available stock</value>
  </data>
  <data name="ErrorCartEmpty" xml:space="preserve">
    <value>Cart is empty. Not possible to create order.</value>
  </data>
  <data name="ErrorReserveOrShipment" xml:space="preserve">
    <value>Set the reserve or shipment date</value>
  </data>
  <data name="ErrorShipmentDate" xml:space="preserve">
    <value>Set the shipment date</value>
  </data>
  <data name="Fault" xml:space="preserve">
    <value>Fault</value>
  </data>
  <data name="Filter" xml:space="preserve">
    <value>Filter</value>
  </data>
  <data name="ForShipment" xml:space="preserve">
    <value>For shipment</value>
  </data>
  <data name="ForWhom" xml:space="preserve">
    <value>For whom</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>from</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>history</value>
  </data>
  <data name="HistoryOfStatuses" xml:space="preserve">
    <value>History of order statuses</value>
  </data>
  <data name="InfoOrder" xml:space="preserve">
    <value>Information on the order</value>
  </data>
  <data name="Item" xml:space="preserve">
    <value>Item</value>
  </data>
  <data name="Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="Kg" xml:space="preserve">
    <value>kg</value>
  </data>
  <data name="ListOfOrders" xml:space="preserve">
    <value>List of orders</value>
  </data>
  <data name="ListSales" xml:space="preserve">
    <value>List of sales</value>
  </data>
  <data name="Mobile" xml:space="preserve">
    <value>Mobile</value>
  </data>
  <data name="MsgCreate1" xml:space="preserve">
    <value>Your order</value>
  </data>
  <data name="MsgCreate2" xml:space="preserve">
    <value>delivery time</value>
  </data>
  <data name="MsgCreate3" xml:space="preserve">
    <value>successfully created.</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewOrderCreated" xml:space="preserve">
    <value>New order created</value>
  </data>
  <data name="NumberInDatabase" xml:space="preserve">
    <value>Number in database</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="OrderNumber" xml:space="preserve">
    <value>Order number</value>
  </data>
  <data name="PaymentConditions" xml:space="preserve">
    <value>Payment conditions</value>
  </data>
  <data name="PhoneNumber" xml:space="preserve">
    <value>Phone number (11 digits)</value>
  </data>
  <data name="Point" xml:space="preserve">
    <value>Point</value>
  </data>
  <data name="PointDestination" xml:space="preserve">
    <value>Point of destination</value>
  </data>
  <data name="Prepay" xml:space="preserve">
    <value>Prepay</value>
  </data>
  <data name="PriceClient" xml:space="preserve">
    <value>Price for the client</value>
  </data>
  <data name="PriceType" xml:space="preserve">
    <value>Type of price</value>
  </data>
  <data name="Reserve" xml:space="preserve">
    <value>Reserve</value>
  </data>
  <data name="ReservedTill" xml:space="preserve">
    <value>reserved till</value>
  </data>
  <data name="SearchFromDate" xml:space="preserve">
    <value>Search from date</value>
  </data>
  <data name="SeasonCart" xml:space="preserve">
    <value>Production order cart</value>
  </data>
  <data name="ShipmentNotAlolowed" xml:space="preserve">
    <value>Shipment not allowed. Talk to your manager!</value>
  </data>
  <data name="ShowMore" xml:space="preserve">
    <value>Show more</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="SuccessfullyChanged" xml:space="preserve">
    <value>Successfully changed</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TotalClient" xml:space="preserve">
    <value>Total for the client</value>
  </data>
  <data name="TotalSum" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="Weight" xml:space="preserve">
    <value>Weight</value>
  </data>
  <data name="WriteComment" xml:space="preserve">
    <value>Write here your comment</value>
  </data>
  <data name="YourData" xml:space="preserve">
    <value>Your data</value>
  </data>
</root>