@model Term.Web.Models.SalesViewModel
@using Term.Utils
@using Term.Web.Views.Resources;
@{
    ViewBag.Title = CartAndOrders.ListSales;
   
  
}

<h2 class="border-form-podbor search-order-title">@ForSearchResult.ChooseSales</h2>


@using (Html.BeginForm("List", "Sales", FormMethod.Get))
{
    <fieldset class="border-form-podbor">
        <div class="row">
            <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">
                @Html.LabelFor(p => p.BeginDate, new { @class = "search-order-label" })
                <div>
                    <div class="input-group date">
                        @Html.TextBoxFor(model => model.BeginDate, new { @class = "form-control" })
                        <span class="input-group-addon date-pick-btn">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">
                @Html.LabelFor(p => p.EndDate, new {@class = "search-order-label"})
                <div>
                    <div class="input-group date">
                        @Html.TextBoxFor(model => model.EndDate, new {@class = "form-control"})
                        <span class="input-group-addon date-pick-btn">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>
            </div>

            <div class="col-xs-12 col-sm-2">
                <label class="search-order-label">@CartAndOrders.Status</label>
                <div>
                    @Html.DropDownListFor(p => p.StatusId, Model.Statuses, @CartAndOrders.All, new {@class = "form-control"})
                </div>
            </div>

            <div class="col-xs-12 col-sm-3">
                <label class="search-order-label">@CartAndOrders.ByProduct</label>
                <div>
                    @Html.TextBoxFor(p => p.ProductName, new { @class = "form-control",  @placeholder = @ForSearchResult.CodeOrArt})
                </div>
            </div>
            @if (ViewBag.IsPartner)
            {
                <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">
                    <label class="search-order-label">@CartAndOrders.Point</label>
                    <div>
                        @Html.DropDownListFor(p => p.PointId, Model.PartnerPoints, @CartAndOrders.All, new { @class = "form-control" })
                    </div>
                </div>
            }
            <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2">
                <label class="search-order-label">@ForSearchResult.PerPage</label>
                <div>
                    @Html.DropDownListFor(p => p.ItemsPerPage, HtmlElements.ListItemsPerPage(200, 50), new { id = "ItemsPerPage", name = "ItemsPerPage", @class = "form-control" })
                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 search-order-btn text-center">
                <button class="form-podbor-btn-submit" type="submit">@CartAndOrders.Filter</button>
            </div>
        </div>

    </fieldset>
}

<div class="order-table-header-block m-t-15">
    <span class="order-table-header">@CartAndOrders.ListSales</span>
    @Html.PagedListPager(Model.Sales, page => Url.Action("List", new
    {
        page,
        PointId = Model.PointId,
        BeginDate = Model.BeginDate.ValueForPaginator(),
        EndDate = Model.EndDate.ValueForPaginator(),
        StatusId =Model.StatusId,
        ProductName=Model.ProductName,
        ItemsPerPage = Model.ItemsPerPage
    }),
    new PagedListRenderOptions { LinkToFirstPageFormat = String.Format("<<"), LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">"), LinkToLastPageFormat = String.Format(">>"), MaximumPageNumbersToDisplay = 9 })
</div>
<table id="table-orders" class="data-table order-table">
    <thead>
        <tr>
            <th>
                @CartAndOrders.NumberInDatabase
            </th>
            @if (ViewBag.IsPartner)
            {
                <th>
                    @CartAndOrders.TotalSum
                </th>
            }
            <th>
                @CartAndOrders.DateSale
            </th>
            <th>
                @CartAndOrders.Comment
            </th>
            <th>
                @ForSearchResult.Action
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Sales)
        {
            <tr class="open_order_tr" data-idlink="@item.NumberIn1S">
                <td>
                    @item.NumberIn1S
                </td>
                @if (ViewBag.IsPartner)
                {
                    <td class="price-filds">
                        @item.Total
                    </td>
                }
                <td>
                    @item.SaleDate.ToShortDateString()
                </td>
                <td>
                    @item.Comments
                </td>
                <td>
                    @Html.ActionLink(@CartAndOrders.Details, "Details", new {GuidSaleIn1S = item.GuidIn1S}, new {@class = "order-table-details"})

                </td>
            </tr>
            if (ViewBag.IsPartner)
             {
                 <tr class="invisible" data-idsource="@item.NumberIn1S">
                     <td colspan="10">
                         <div class="row head_order_details">
                             <div class="col-xs-1">
                                 №
                             </div>
                             <div class="col-xs-2">
                                 @ForSearchResult.Article
                             </div>
                             <div class="col-xs-1">
                                 @ForSearchResult.StockNumber
                             </div>
                             <div class="col-xs-6">
                                 @ForSearchResult.ProductName
                             </div>

                             <div class="col-xs-1">
                                 @ForSearchResult.Available
                             </div>
                             <div class="col-xs-1">
                                 @ForSearchResult.Price
                             </div>
                         </div>
                         @{ var i = 0; }

                         @foreach (var detail in item.SaleDetails)
                         {
                         i++;
                         var bg = "";
                         if (i%2 != 0)
                         {
                         bg = "background_order_details";
                         }
                         <div class="row @bg">
                             <div class="col-xs-1">@i</div>
                             <div class="col-xs-2">@detail.Product.Article</div>
                             <div class="col-xs-1">@detail.Product.ProductId</div>
                             <div class="col-xs-6 name_order_details">@detail.Product.Name</div>

                             <div class="col-xs-1">@detail.Count</div>
                             <div class="col-xs-1">@detail.Price</div>
                         </div>
                         }

                     </td>
                 </tr>
             }
        }
    </tbody>
</table>

<div class="m-t-15">
    @Html.PagedListPager(Model.Sales, page => Url.Action("List", new
    {
        page,
        PointId = Model.PointId,
        BeginDate = Model.BeginDate.ValueForPaginator(),
        EndDate = Model.EndDate.ValueForPaginator(),
        StatusId = Model.StatusId,
        ProductName = Model.ProductName,
        ItemsPerPage = Model.ItemsPerPage
    }),
    new PagedListRenderOptions { LinkToFirstPageFormat = String.Format("<<"), LinkToPreviousPageFormat = String.Format("<"), LinkToNextPageFormat = String.Format(">"), LinkToLastPageFormat = String.Format(">>"), MaximumPageNumbersToDisplay = 9 })
</div>
